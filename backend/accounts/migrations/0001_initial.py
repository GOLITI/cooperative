# Generated by Django 5.2.6 on 2025-09-26 00:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('name', models.CharField(choices=[('admin', 'Administrateur'), ('manager', 'Gestionnaire'), ('member', 'Membre'), ('visitor', 'Visiteur'), ('accountant', 'Comptable'), ('salesperson', 'Vendeur'), ('stockkeeper', 'Gestionnaire de stock')], max_length=50, unique=True, verbose_name='Nom du rôle')),
                ('display_name', models.CharField(max_length=100, verbose_name="Nom d'affichage")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('color', models.CharField(default='#6c757d', max_length=7, verbose_name='Couleur')),
                ('priority', models.PositiveIntegerField(default=1, help_text='1 = plus haute priorité', verbose_name='Priorité')),
                ('can_access_admin', models.BooleanField(default=False, verbose_name='Accès administration')),
                ('can_view_reports', models.BooleanField(default=False, verbose_name='Voir les rapports')),
                ('can_manage_members', models.BooleanField(default=False, verbose_name='Gérer les membres')),
                ('can_manage_inventory', models.BooleanField(default=False, verbose_name="Gérer l'inventaire")),
                ('can_manage_sales', models.BooleanField(default=False, verbose_name='Gérer les ventes')),
                ('can_manage_finance', models.BooleanField(default=False, verbose_name='Gérer les finances')),
                ('can_validate_transactions', models.BooleanField(default=False, verbose_name='Valider les transactions')),
            ],
            options={
                'verbose_name': 'Rôle utilisateur',
                'verbose_name_plural': 'Rôles utilisateurs',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CooperativeAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('can_view_dashboard', models.BooleanField(default=True, verbose_name='Tableau de bord')),
                ('can_manage_own_profile', models.BooleanField(default=True, verbose_name='Gérer son profil')),
                ('can_view_members', models.BooleanField(default=False, verbose_name='Voir les membres')),
                ('can_add_members', models.BooleanField(default=False, verbose_name='Ajouter des membres')),
                ('can_edit_members', models.BooleanField(default=False, verbose_name='Modifier les membres')),
                ('can_delete_members', models.BooleanField(default=False, verbose_name='Supprimer les membres')),
                ('can_view_inventory', models.BooleanField(default=False, verbose_name="Voir l'inventaire")),
                ('can_add_products', models.BooleanField(default=False, verbose_name='Ajouter des produits')),
                ('can_edit_products', models.BooleanField(default=False, verbose_name='Modifier les produits')),
                ('can_delete_products', models.BooleanField(default=False, verbose_name='Supprimer les produits')),
                ('can_manage_stock', models.BooleanField(default=False, verbose_name='Gérer les stocks')),
                ('can_view_sales', models.BooleanField(default=False, verbose_name='Voir les ventes')),
                ('can_create_sales', models.BooleanField(default=False, verbose_name='Créer des ventes')),
                ('can_edit_sales', models.BooleanField(default=False, verbose_name='Modifier les ventes')),
                ('can_delete_sales', models.BooleanField(default=False, verbose_name='Supprimer les ventes')),
                ('can_process_payments', models.BooleanField(default=False, verbose_name='Traiter les paiements')),
                ('can_view_finances', models.BooleanField(default=False, verbose_name='Voir les finances')),
                ('can_create_transactions', models.BooleanField(default=False, verbose_name='Créer des transactions')),
                ('can_validate_transactions', models.BooleanField(default=False, verbose_name='Valider les transactions')),
                ('can_manage_accounts', models.BooleanField(default=False, verbose_name='Gérer les comptes')),
                ('can_manage_loans', models.BooleanField(default=False, verbose_name='Gérer les prêts')),
                ('can_view_basic_reports', models.BooleanField(default=False, verbose_name='Rapports de base')),
                ('can_view_financial_reports', models.BooleanField(default=False, verbose_name='Rapports financiers')),
                ('can_export_data', models.BooleanField(default=False, verbose_name='Exporter les données')),
                ('can_manage_users', models.BooleanField(default=False, verbose_name='Gérer les utilisateurs')),
                ('can_manage_permissions', models.BooleanField(default=False, verbose_name='Gérer les permissions')),
                ('can_view_logs', models.BooleanField(default=False, verbose_name='Voir les journaux')),
                ('can_backup_data', models.BooleanField(default=False, verbose_name='Sauvegarder les données')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cooperative_access', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Accès coopérative',
                'verbose_name_plural': 'Accès coopérative',
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('username', models.CharField(max_length=150, verbose_name="Nom d'utilisateur")),
                ('ip_address', models.GenericIPAddressField(verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='Navigateur')),
                ('success', models.BooleanField(choices=[(True, 'Succès'), (False, 'Échec')], verbose_name='Succès')),
                ('failure_reason', models.CharField(blank=True, max_length=200, verbose_name="Raison de l'échec")),
            ],
            options={
                'verbose_name': 'Tentative de connexion',
                'verbose_name_plural': 'Tentatives de connexion',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['username', 'ip_address'], name='accounts_lo_usernam_278f9b_idx'), models.Index(fields=['created_at'], name='accounts_lo_created_597055_idx')],
            },
        ),
        migrations.CreateModel(
            name='PermissionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('action', models.CharField(choices=[('granted', 'Accordé'), ('revoked', 'Révoqué'), ('modified', 'Modifié')], max_length=20, verbose_name='Action')),
                ('permission_name', models.CharField(max_length=100, verbose_name='Permission')),
                ('old_value', models.TextField(blank=True, verbose_name='Ancienne valeur')),
                ('new_value', models.TextField(blank=True, verbose_name='Nouvelle valeur')),
                ('reason', models.TextField(blank=True, verbose_name='Motif')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permission_changes_made', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_logs', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur concerné')),
            ],
            options={
                'verbose_name': 'Journal des permissions',
                'verbose_name_plural': 'Journal des permissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('session_key', models.CharField(max_length=40, verbose_name='Clé de session')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='Navigateur')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='Heure de connexion')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Heure de déconnexion')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Dernière activité')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Pays')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_activities', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Activité de session',
                'verbose_name_plural': 'Activités de session',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biographie')),
                ('language', models.CharField(choices=[('fr', 'Français'), ('en', 'Anglais')], default='fr', max_length=5, verbose_name='Langue')),
                ('theme', models.CharField(choices=[('light', 'Clair'), ('dark', 'Sombre'), ('auto', 'Automatique')], default='light', max_length=10, verbose_name='Thème')),
                ('timezone', models.CharField(default='Africa/Abidjan', max_length=50, verbose_name='Fuseau horaire')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Notifications email')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='Notifications SMS')),
                ('two_factor_enabled', models.BooleanField(default=False, verbose_name='Authentification à 2 facteurs')),
                ('last_password_change', models.DateTimeField(blank=True, null=True, verbose_name='Dernier changement de mot de passe')),
                ('password_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expiration du mot de passe')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dernière IP de connexion')),
                ('login_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de connexions')),
                ('member', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.member', verbose_name='Membre associé')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userrole', verbose_name='Rôle')),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
    ]
