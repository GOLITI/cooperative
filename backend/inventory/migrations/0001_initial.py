# Generated by Django 5.2.6 on 2025-09-26 00:15

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('name', models.CharField(max_length=50, verbose_name="Nom de l'unité")),
                ('abbreviation', models.CharField(max_length=10, verbose_name='Abréviation')),
                ('type', models.CharField(choices=[('weight', 'Poids'), ('volume', 'Volume'), ('length', 'Longueur'), ('area', 'Surface'), ('piece', 'Pièce'), ('other', 'Autre')], default='piece', max_length=20, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Unité de mesure',
                'verbose_name_plural': 'Unités de mesure',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la catégorie')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Image')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='inventory.productcategory', verbose_name='Catégorie parent')),
            ],
            options={
                'verbose_name': 'Catégorie de produit',
                'verbose_name_plural': 'Catégories de produits',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du produit')),
                ('code', models.CharField(help_text='Code unique du produit', max_length=50, unique=True, verbose_name='Code produit')),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Code-barres')),
                ('product_type', models.CharField(choices=[('raw_material', 'Matière première'), ('finished_product', 'Produit fini'), ('service', 'Service'), ('consumable', 'Consommable')], default='finished_product', max_length=20, verbose_name='Type de produit')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('specifications', models.TextField(blank=True, verbose_name='Spécifications techniques')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Image principale')),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Poids unitaire')),
                ('dimensions', models.CharField(blank=True, max_length=100, verbose_name='Dimensions (L x l x h)')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name="Prix d'achat")),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix de vente')),
                ('member_price', models.DecimalField(blank=True, decimal_places=2, help_text='Prix préférentiel pour les membres', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix membre')),
                ('current_stock', models.DecimalField(decimal_places=3, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock actuel')),
                ('min_stock_level', models.DecimalField(decimal_places=3, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock minimum')),
                ('max_stock_level', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock maximum')),
                ('origin', models.CharField(blank=True, max_length=200, verbose_name='Origine')),
                ('quality_grade', models.CharField(blank=True, max_length=50, verbose_name='Grade de qualité')),
                ('expiry_tracking', models.BooleanField(default=False, help_text='Activer si le produit a une date de péremption', verbose_name="Suivi d'expiration")),
                ('lot_tracking', models.BooleanField(default=False, help_text='Activer pour tracer les lots de production', verbose_name='Suivi par lot')),
                ('is_sellable', models.BooleanField(default=True, verbose_name='Vendable')),
                ('is_purchasable', models.BooleanField(default=True, verbose_name='Achetable')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='inventory.productcategory', verbose_name='Catégorie')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.unit', verbose_name='Unité de base')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, help_text='Désélectionner pour désactiver sans supprimer.', verbose_name='Actif')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Quantité')),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Coût unitaire')),
                ('movement_type', models.CharField(choices=[('in', 'Entrée'), ('out', 'Sortie'), ('adjustment', 'Ajustement'), ('transfer', 'Transfert'), ('return', 'Retour'), ('loss', 'Perte')], max_length=20, verbose_name='Type de mouvement')),
                ('reason', models.CharField(choices=[('purchase', 'Achat'), ('production', 'Production'), ('sale', 'Vente'), ('donation', 'Don'), ('inventory', 'Inventaire'), ('expiry', 'Péremption'), ('damage', 'Dommage'), ('theft', 'Vol'), ('other', 'Autre')], max_length=20, verbose_name='Raison')),
                ('lot_number', models.CharField(blank=True, max_length=100, verbose_name='Numéro de lot')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('supplier_info', models.CharField(blank=True, max_length=200, verbose_name='Informations fournisseur')),
                ('reference_document', models.CharField(blank=True, help_text='Bon de commande, facture, etc.', max_length=100, verbose_name='Document de référence')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Validé le')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.product', verbose_name='Produit')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_movements', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Mouvement de stock',
                'verbose_name_plural': 'Mouvements de stock',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['product', 'created_at'], name='inventory_s_product_5919a9_idx'), models.Index(fields=['movement_type'], name='inventory_s_movemen_018f99_idx'), models.Index(fields=['created_at'], name='inventory_s_created_05ebf5_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['code'], name='inventory_p_code_a06c9c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='inventory_p_name_f6a6a1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='inventory_p_categor_607069_idx'),
        ),
    ]
